@model Template.Web.Areas.Example.Dipendenti.EditViewModel
@{
    ViewData["Id"] = Model.Id;
    ViewData["Dipendente"] = Model.Nome + " " + Model.Cognome;
    ViewData["Ruolo"] = Model.Ruolo;
    ViewData["DataNascita"] = Model.DataNascita;
    ViewData["CF"] = Model.CF;
    ViewData["VisitaMedica"] = Model.VisitaMedica;
    ViewData["Patente"] = Model.Patente;
}

<div class="container-fluid">
    <div class="row">
        <!-- Contenuto principale -->
        <div class="col-8">
            <div class="mx-3 mt-3">
                <div class="mb-4">
                    <div class="navbar-brand text-truncate">
                        <h1>@ViewData["Dipendente"]</h1>
                        <h2 class="fs-4 mb-3">@ViewData["Ruolo"]</h2>
                    </div>
                    <div>
                        <label class="fs-5 mb-1">Data di nascita: </label>
                        <b class="fs-5"> @ViewData["DataNascita"]</b>
                        <br />
                        <label class="fs-5">Codice Fiscale: </label>
                        <b class="fs-5"> @ViewData["CF"]</b>
                    </div>
                </div>

                <div>
                    <h2 class="fs-4 ms-2 mb-3">Orari:</h2>
                    <div class="lista-assegnazioni">
                        @if (Model.Orari.Count() > 0)
                        {
                            @foreach (var orario in Model.Orari)
                            {
                                <div class="container mb-1 ms-4" style="margin-left: 0px; padding-left: 0px">
                                    <div class="row">
                                        <div class="col-3 me-1">
                                            <label class="fs-5">Giorno:</label><b class="fs-5"> @orario.Giorno </b>
                                        </div>
                                        <div class="col-3 me-1">
                                            <label class="fs-5">Orario:</label><b class="fs-5"> @orario.Inizio - @orario.Fine </b>
                                        </div>
                                        <div class="col-3">
                                            <label class="fs-5">Nave:</label><b class="fs-5"> @orario.NomeNave</b>
                                        </div>
                                    </div>    
                                </div> 
                            }
               
                        }
                        @if (Model.Orari.Count() <= 0)
                        {
                            <div class="nessuna-assegnazione">
                                <label class="fs-5">Nessun turno assegnato</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <aside class="col-3 me-1 mt-4">
            <div class="card mb-5">
                @if (Model.VisitaMedica < DateOnly.FromDateTime(DateTime.Now))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #ff5858">Visita Medica</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #ffe9e9">Scadenza:</label>
                    <input type="text" id="visitaMedica" class="card-body text-center d-block fs-4" value="@ViewData["VisitaMedica"]" readonly style="width:100%; background-color: #ffe9e9" />
                    <button class="btn text-center d-block" id="editVisita" style="background-color: #ff5858">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }                 
                @if (Model.VisitaMedica <= DateOnly.FromDateTime(DateTime.Now).AddDays(7) && Model.VisitaMedica >= DateOnly.FromDateTime(DateTime.Now))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #ffe454">Visita Medica</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #fff5cc">Scadenza:</label>
                    <input type="text" id="visitaMedica" class="card-body text-center d-block fs-4" value="@ViewData["VisitaMedica"]" readonly style="width:100%; background-color: #ffe9e9" />
                    <button class="btn text-center d-block" id="editVisita" style="background-color: #ffe454">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }
                @if (Model.VisitaMedica > DateOnly.FromDateTime(DateTime.Now).AddDays(7))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #7096ff">Visita Medica</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #f1f5ff">Scadenza:</label>
                    <input type="text" id="visitaMedica" class="card-body text-center d-block fs-4" value="@ViewData["VisitaMedica"]" readonly style="width:100%; background-color: #f1f5ff" />
                    <button class="btn text-center d-block" id="editVisita" style="background-color: #7096ff">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }
            </div>
            <div class="card">
                @if (Model.Patente < DateOnly.FromDateTime(DateTime.Now))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #ff5858">Patente</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #ffe9e9">Scadenza:</label>
                    <input type="text" id="patente" class="card-body text-center d-block fs-4" value="@ViewData["Patente"]" readonly style="width:100%; background-color: #ffe9e9" />
                    <button class="btn text-center d-block" id="editPatente" style="background-color: #ff5858">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }
                @if (Model.Patente <= DateOnly.FromDateTime(DateTime.Now).AddDays(7) && Model.Patente >= DateOnly.FromDateTime(DateTime.Now))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #ffe454">Patente</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #fff5cc">Scadenza:</label>
                    <input type="text" id="patente" class="card-body text-center d-block fs-4" value="@ViewData["Patente"]" readonly style="width:100%; background-color: #f1f5ff" />
                    <button class="btn text-center d-block" id="editPatente" style="background-color: #ffe454">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }
                @if (Model.Patente > DateOnly.FromDateTime(DateTime.Now).AddDays(7))
                {
                    <h2 class="card-header text-center d-block" style="background-color: #7096ff">Patente</h2>
                    <label class="card-body text-center d-block fs-4" style="background-color: #f1f5ff">Scadenza:</label>
                    <input type="text" id="patente" class="card-body text-center d-block fs-4" value="@ViewData["Patente"]" readonly style="width:100%; background-color: #f1f5ff" />
                    <button class="btn text-center d-block" id="editPatente" style="background-color: #7096ff">
                        Modifica
                        @* <img src="~/images/pencil.png" alt="modifica" style="width: 50px; height: 50px;" /> *@
                    </button>
                }
            </div>
        </aside>
    </div>
</div>


@section scripts{
    <script src="/js/bundle-vue.js" asp-append-version="true"></script>
    <script src="~/Areas/Example/Dipendenti/Edit.js" asp-append-version="true"></script>

    <script src="~/node_modules/@@microsoft/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/js/signalRConnectionManager.js" asp-append-version="true"></script>

    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script type="application/json" id="Seed_JSON">
        @Html.Raw(Model.ToJson())
    </script>
    <script type="text/javascript">
        var signalRManager = new SignalRConnectionManager("/templateHub", "@Model.Id", "JoinGroup", "LeaveGroup");
        signalRManager.registerEvents();
        signalRManager.startConnection();

        var editModel = new Example.Dipendenti.editVueModel(signalRManager.connection, JSON.parse(document.getElementById("Seed_JSON").innerText));

        var vueModel = new Vue({
            el: '#pageId',
            data: editModel,
            computed: {
            }
        });

        $(document).ready(function () {
            $("#editVisita").click(function () {
                $("#visitaMedica").prop("readonly", false);
                $("#visitaMedica").addClass("modificabile");
            });

            $("#visitaMedica").blur(function () {
                $(this).prop("readonly", true);
                $(this).removeClass("modificabile");

                var visitaMedica = $("#visitaMedica").val();
                var patente = $("#patente").val();
                eseguiModificaData(visitaMedica, patente);
            });

            $("#editPatente").click(function () {
                $("#patente").prop("readonly", false);
                $("#patente").addClass("modificabile");
            });

            // Aggiungi un altro gestore di eventi per salvare la data modificata
            $("#patente").blur(function () {
                $(this).prop("readonly", true);
                $(this).removeClass("modificabile");

                var visitaMedica = $("#visitaMedica").val();
                var patente = $("#patente").val();
                
                eseguiModificaData(visitaMedica, patente);
            });

            // Gestisci il click sul pulsante
            function eseguiModificaData(visitaMedica, patente) {

                // Chiama l'endpoint nel controller ASP.NET utilizzando AJAX
                $.ajax({
                    url: "/Example/Dipendenti/ModificaData",
                    method: "POST",
                    data: {
                        id: "@Model.Id",
                        visitaMedica: visitaMedica,
                        patente: patente
                    },
                    success: function (response) {
                        alert("Data modificata con successo!");
                        // Ricarica la pagina
                        location.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        let errorMessage = "Si è verificato un errore durante la modifica della data.\n \n";
                        errorMessage += "Dettagli: " + jqXHR.responseText;

                        alert(errorMessage);

                        console.error("Errore AJAX:", textStatus, errorThrown);
                        console.error("Dettagli dell'errore:", jqXHR.responseText);

                        location.reload();

                    }
                });
            }
        });
    </script>
}
