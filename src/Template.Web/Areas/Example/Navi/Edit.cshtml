@model Template.Web.Areas.Example.Navi.EditViewModel
@{
    if (Model.Id != null)
    {
        ViewData["Title"] = "Nave - " + Model.Nome;
    }
    else
    {
        ViewData["Title"] = "Recupero dettaglio nave fallito! (Come te)";
    }
}
@section pageTitle{
    <div class="navbar-brand text-truncate">
        @ViewData["Title"]
    </div>
}

<div>
    <div>
        <label>Cliente: </label><b> @Model.NomeCliente</b>
        <br /><label>Arrivo: </label><b> @Model.Arrivo</b>
        <label>Container: </label><b> @Model.Container</b>
        <br /><label>Partenza: </label><b> @Model.Partenza</b>
        <label>Bancali: </label><b> @Model.Bancali</b>
    </div>

    <div class="text-center">
        <div id="lostConnection" class="d-none text-white">
            <h3>Ho perso la connessione con il server</h3>
            <p><i class="fa fa-circle-o-notch fa-spin"></i>&nbsp;Attendi, sto riprovando a connettermi per te</p>
        </div>
        <div id="lostConnectionManualRetry" class="d-none text-white">
            <h3>Ho perso la connessione con il server e non riesco più a ricollegarmi</h3>
            <p>Prova ad aggiornare la pagina manualmente</p>
            <button class="btn btn-primary" onclick="location.reload(true)"><i class="fa fa-refresh"></i>&nbsp;Ricarica la pagina</button>
        </div>
    </div>
</div>
<div>
    @for (var i = 0; i < Model.DateLavorazione.Count(); i++ )
    {
        <label>@Model.DateLavorazione.ElementAt(i).Data</label>
        <label>Dipendenti rimanenti: @Model.DipendentiDisponibili.ElementAt(i).Numero</label>
        <button>Matita</button> <br />
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th scope="col">00 - 06</th>
                    <th scope="col">06 - 12</th>
                    <th scope="col">12 - 18</th>
                    <th scope="col">18 - 24</th>
                </tr>
            </thead>
            <tbody>
                <td>
                    @foreach (var orarioDipendente in Model.OrariDipendenti)
                    {
                        @if (orarioDipendente.Giorno == Model.DateLavorazione.ElementAt(i).Data
                                && orarioDipendente.Inizio == TimeOnly.Parse("00:00:00"))
                        {
                            <div>@orarioDipendente.Nome @orarioDipendente.Cognome @orarioDipendente.Ruolo</div>
                        }
                    }
                </td>
                <td>
                    @foreach (var orarioDipendente in Model.OrariDipendenti)
                    {
                        @if (orarioDipendente.Giorno == Model.DateLavorazione.ElementAt(i).Data
                                && orarioDipendente.Inizio == TimeOnly.Parse("06:00:00"))
                        {
                            <div>@orarioDipendente.Nome @orarioDipendente.Cognome @orarioDipendente.Ruolo</div>
                        }
                    }
                </td>
                <td>
                    @foreach (var orarioDipendente in Model.OrariDipendenti)
                    {
                        @if (orarioDipendente.Giorno == Model.DateLavorazione.ElementAt(i).Data
                                && orarioDipendente.Inizio == TimeOnly.Parse("12:00:00"))
                        {
                            <div>@orarioDipendente.Nome @orarioDipendente.Cognome @orarioDipendente.Ruolo</div>
                        }
                    }
                </td>
                <td>
                    @foreach (var orarioDipendente in Model.OrariDipendenti)
                    {
                        @if (orarioDipendente.Giorno == Model.DateLavorazione.ElementAt(i).Data
                                && orarioDipendente.Inizio == TimeOnly.Parse("18:00:00"))
                        {
                            <div>@orarioDipendente.Nome @orarioDipendente.Cognome @orarioDipendente.Ruolo</div>
                        }
                    }
                </td>                
            </tbody>

        </table>
    }
</div>
@section scripts{
    <script src="/js/bundle-vue.js" asp-append-version="true"></script>
    <script src="~/Areas/Example/Navi/Edit.js" asp-append-version="true"></script>

    <script src="~/node_modules/@@microsoft/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/js/signalRConnectionManager.js" asp-append-version="true"></script>

    <script type="application/json" id="Seed_JSON">
        @Html.Raw(Model.ToJson())
    </script>
    <script type="text/javascript">
        // SOSTITUIRE @Model.Id con ID del gruppo
        var signalRManager = new SignalRConnectionManager("/templateHub", "@Model.Id", "JoinGroup", "LeaveGroup");
        signalRManager.registerEvents();
        signalRManager.startConnection();

        var editModel = new Example.Navi.editVueModel(signalRManager.connection, JSON.parse(document.getElementById("Seed_JSON").innerText));

        var vueModel = new Vue({
            el: '#pageId',
            data: editModel,
            computed: {
            }
        });

    </script>
}
