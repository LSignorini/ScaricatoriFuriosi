@{
    Layout = "_LayoutHtml";
}
@inject IHtmlLocalizer<Template.Web.Areas.Example.Orari.IndexViewModel> ModelLocalizer
@model Template.Web.Areas.Example.Orari.IndexViewModel
@{
    ViewData["Title"] = "Orari";
}
<style>
    .card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .text {
        padding-right: 20px; /* Aggiunto padding per fare spazio alla "x" */
    }

    .close-btn {
        position: absolute;
        align-self: center;
        right: 10px; /* Posizionato a destra */
        cursor: pointer;
    }
</style>

<header style="background-color: #1554a3; color: white;">
    <div class="container-fluid py-3">
        <div class="row align-items-center">
            <div class="col-1 text-start">
                <a href="/Example/Navi/Edit/@Model.Nave.Id" style="color: white; fs-5; text-decoration: underline;">&lt; Indietro</a>
            </div>
            <div class="col-8">
                <h1 class="fs-1 mb-0">@Model.Nave.Nome</h1>
            </div>
            <div class="col-2 text-end">
                <h2 class="fs-1 mb-0">@Model.Giorno</h2>
            </div>
        </div>
    </div>
</header>

<div id="pageId" class="container-fluid">
    <div class="row">
        <aside class="col-3 aside-content m-0 p-0">
            <div class="py-3 px-3" style="background-color: #a5bdff">
                <h3>Dipendenti</h3>
            </div>
            <div v-if="model.model.dipendentiLiberi.length > 0">
                <div style="background-color: #f1f5ff" v-for="dipendentiLiberi in model.model.dipendentiLiberi">
                    <h4 class="pt-3 pb-2 ps-3">{{dipendentiLiberi.ruolo}}</h4>
                    <div class="list-group">
                        <div v-for="dipendenteLibero in dipendentiLiberi.dipendenti">
                            <a href="#" class="list-group-item list-group-item-action" aria-current="true"
                               v-on:click="toggleOperator(dipendenteLibero.id)" v-bind:class="{'active' : isOperatorSelected(dipendenteLibero.id)}">{{dipendenteLibero.nome}} {{dipendenteLibero.cognome}}</a>
                        </div>
                    </div>
                </div>
            </div>
            <div v-else>
                <h4 class="pt-3 pb-2 ps-3 fs-5">Nessun dipendente disponibile</h4>
            </div>
        </aside>
        <div class="col-9 main-content">
            <div class="container-fluid p-0">
                <div class="row">
                    <div class="col-11 p-0">
                        <h3 class="mx-4 my-3">Turni</h3>
                        <table class="table mx-3">
                            <thead>
                                <tr>
                                    <th class="text-center" scope="col" style="width: 25%; background-color: #a5bdff" v-for="fasciaOraria in model.model.fasceOrarie">{{fasciaOraria.etichetta}}</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="text-center" style="width: 25%" v-for="fasciaOraria in model.model.fasceOrarie">
                                        <button type="button" v-bind:disabled="!isOneOperatorSelected()" v-on:click="addOrarioToDipendente(fasciaOraria.orarioInizio)">+</button> <br />
                                    <div class="card" v-for="orario in fasciaOraria.orari">
                                            <div class="text">
                                                <p>{{orario.nome}} {{orario.cognome}}</p>
                                                <p>{{orario.ruolo}}</p>
                                            </div>
                                            <button class="close-btn" name="btn-00"
                                                    v-on:click="removeOrarioDipendente(orario.id)">x</button>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="/js/bundle-vue.js" asp-append-version="true"></script>
    <script src="~/Areas/Example/Orari/Index.js" asp-append-version="true"></script>

    <script type="application/json" id="Seed_JSON">
        @Html.Raw(Model.ToJson())
    </script>
    <script type="text/javascript">
        var indexVueModel = new Example.Orari.indexVueModel(JSON.parse(document.getElementById("Seed_JSON").innerText));

        var vueModel = new Vue({
            el: '#pageId',
            data: function () {
                return {
                    model: indexVueModel,
                    selectedOperatorId : null
                };
            },
            methods: {
                redirectToEditNave: function(idNave) {
                    window.location.href = "/Example/Navi/Edit/" + idNave;
                },
                isOperatorSelected : function (id) {
                    return this.selectedOperatorId == id;
                },

                toggleOperator: function (operatorId) {
                    if (this.selectedOperatorId == operatorId) {
                        this.selectedOperatorId = null;
                    }
                    else {
                        this.selectedOperatorId = operatorId;
                    }
                },

                isOneOperatorSelected: function () {
                    return this.selectedOperatorId != null;
                },

                // Gestisci il click sul pulsante +
                addOrarioToDipendente : function (orarioInizio) {
                    return new Promise((resolve, reject) => {
                        // Chiama l'endpoint nel controller ASP.NET utilizzando AJAX
                        $.ajax({
                            url: "/Example/Orari/addOrarioToDipendente",
                            method: "POST",
                            data: {
                                orarioInizio: orarioInizio,
                                id: this.selectedOperatorId,
                                idNave: vueModel.model.model.nave.id,
                                giorno: vueModel.model.model.giorno
                            },
                            success: function (response) {
                                //alert("Orario aggiunto con successo!");
                                resolve(response);
                                this.selectedOperatorId = null;
                                // Ricarica la pagina
                                location.reload();
                            },
                            error: function () {
                                alert("Si è verificato un errore durante l'aggiunta dell'orario.");
                                reject();
                            }
                        });
                    });
                },

                // Gestisci il click sul pulsante x
                removeOrarioDipendente : function (idOrario) {
                    return new Promise((resolve, reject) => {
                        // Chiama l'endpoint nel controller ASP.NET utilizzando AJAX
                        $.ajax({
                            url: "/Example/Orari/removeOrarioDipendente",
                            method: "POST",
                            data: {
                                idOrario: idOrario
                            },
                            success: function (response) {
                                //alert("Orario rimosso con successo!");
                                resolve(response);
                                // Ricarica la pagina
                                location.reload();
                            },
                            error: function () {
                                alert("Si è verificato un errore durante la rimozione dell'orario.");
                                reject();
                            }
                        });
                    });
                }
            }
        });
    </script>
}